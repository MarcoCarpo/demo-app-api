// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int          @id @default(autoincrement())
  name         String?
  email        String       @unique
  password     String
  street       String       @default("")
  city         String       @default("")
  zipCode      String       @default("")
  country      String       @default("")
  cartSession  CartSession?
  imageId      Int?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  refreshToken String?
  role         UserRole     @default(USER)
  Image        Image?       @relation(fields: [imageId], references: [id])
}

enum UserRole {
  USER
  ADMIN
}

model CartSession {
  id     Int               @id @default(autoincrement())
  userId Int               @unique
  user   User              @relation(fields: [userId], references: [id])
  items  CartSessionItem[]
}

model CartSessionItem {
  id     Int         @id @default(autoincrement())
  cartId Int
  cart   CartSession @relation(fields: [cartId], references: [id])

  productId Int
  product   Product @relation(fields: [productId], references: [id])

  quantity Int
}

model Product {
  id              Int               @id @default(autoincrement())
  name            String
  description     String
  price           Float
  categoryId      Int
  imageId         Int?
  salePercentage  Int               @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  ProductCategory ProductCategory?  @relation(fields: [categoryId], references: [id])
  cartItems       CartSessionItem[]
  Image           Image?            @relation(fields: [imageId], references: [id])
}

model ProductCategory {
  id        Int       @id @default(autoincrement())
  name      String
  products  Product[]
  imageId   Int?
  Image     Image?    @relation(fields: [imageId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products   Product[]
  users      User[]
  categories ProductCategory[]
}
